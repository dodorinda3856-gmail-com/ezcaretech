// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ezcaretech.Models;

namespace ezcaretech.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20211213100737_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ADMIN")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ezcaretech.Models.CommonCode", b =>
                {
                    b.Property<decimal>("Identifier")
                        .HasColumnType("NUMBER")
                        .HasColumnName("IDENTIFIER");

                    b.Property<string>("CodeName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CODE_NAME");

                    b.Property<string>("DeleteOrNot")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("DELETE_OR_NOT")
                        .IsFixedLength(true);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<DateTime?>("RegisDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("REGIS_DATE");

                    b.HasKey("Identifier")
                        .HasName("SYS_C005169");

                    b.ToTable("COMMON_CODE");
                });

            modelBuilder.Entity("ezcaretech.Models.MediProcedure", b =>
                {
                    b.Property<decimal>("MediProcedureId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MEDI_PROCEDURE_ID");

                    b.Property<DateTime>("CreatetionDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATETION_DATE");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("DATE")
                        .HasColumnName("DELETE_DATE");

                    b.Property<string>("DeleteOrNot")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("DELETE_OR_NOT")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("RevisedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("REVISED_DATE");

                    b.Property<decimal>("TreatmentAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TREATMENT_AMOUNT");

                    b.HasKey("MediProcedureId");

                    b.ToTable("MEDI_PROCEDURE");
                });

            modelBuilder.Entity("ezcaretech.Models.MediStaff", b =>
                {
                    b.Property<decimal>("StaffId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STAFF_ID");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("GENDER")
                        .IsFixedLength(true);

                    b.Property<string>("MediSubject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MEDI_SUBJECT");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("PHONE_NUM");

                    b.Property<string>("Position")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("POSITION")
                        .IsFixedLength(true);

                    b.Property<string>("StaffEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("STAFF_EMAIL");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STAFF_NAME");

                    b.HasKey("StaffId")
                        .HasName("SYS_C005177");

                    b.ToTable("MEDI_STAFF");
                });

            modelBuilder.Entity("ezcaretech.Models.MediStaffLogin", b =>
                {
                    b.Property<string>("StaffLoginId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("STAFF_LOGIN_ID");

                    b.Property<decimal>("StaffId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STAFF_ID");

                    b.Property<string>("StaffLoginPw")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("STAFF_LOGIN_PW");

                    b.HasKey("StaffLoginId")
                        .HasName("SYS_C005180");

                    b.HasIndex("StaffId");

                    b.ToTable("MEDI_STAFF_LOGIN");
                });

            modelBuilder.Entity("ezcaretech.Models.NameOfDisease", b =>
                {
                    b.Property<decimal>("DiseaseId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DISEASE_ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATION_DATE");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("DATE")
                        .HasColumnName("DELETE_DATE");

                    b.Property<string>("DeleteOrNot")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("DELETE_OR_NOT")
                        .IsFixedLength(true);

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("DISEASE_NAME");

                    b.Property<decimal>("MediProcedureId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MEDI_PROCEDURE_ID");

                    b.Property<DateTime?>("RevisedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("REVISED_DATE");

                    b.HasKey("DiseaseId")
                        .HasName("SYS_C005185");

                    b.HasIndex("MediProcedureId");

                    b.ToTable("NAME_OF_DISEASE");
                });

            modelBuilder.Entity("ezcaretech.Models.Patient", b =>
                {
                    b.Property<decimal>("PatientId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PATIENT_ID");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(300)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("AgreeOfAlarm")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AGREE_OF_ALARM")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("DATE")
                        .HasColumnName("DOB");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("GENDER")
                        .IsFixedLength(true);

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PATIENT_NAME");

                    b.Property<string>("PatientStatusVal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PATIENT_STATUS_VAL")
                        .IsFixedLength(true);

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("PHONE_NUM");

                    b.Property<DateTime>("RegistDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("REGIST_DATE");

                    b.Property<string>("ResidentRegistNum")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(13)")
                        .HasColumnName("RESIDENT_REGIST_NUM");

                    b.HasKey("PatientId");

                    b.ToTable("PATIENT");
                });

            modelBuilder.Entity("ezcaretech.Models.Payment", b =>
                {
                    b.Property<decimal>("PaymentId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PAYMENT_ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATION_DATE");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("DATE")
                        .HasColumnName("DELETE_DATE");

                    b.Property<string>("DeleteOrNot")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("DELETE_OR_NOT")
                        .IsFixedLength(true);

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DISCOUNT_AMOUNT");

                    b.Property<decimal>("DiseaseId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DISEASE_ID");

                    b.Property<decimal>("FinPaymentAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("FIN_PAYMENT_AMOUNT");

                    b.Property<decimal?>("OriginAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ORIGIN_AMOUNT");

                    b.Property<decimal>("PatientId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PATIENT_ID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("PAYMENT_DATE");

                    b.Property<DateTime?>("RevisedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("REVISED_DATE");

                    b.Property<decimal>("TreatId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TREAT_ID");

                    b.HasKey("PaymentId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("PatientId");

                    b.HasIndex("TreatId");

                    b.ToTable("PAYMENT");
                });

            modelBuilder.Entity("ezcaretech.Models.PushAlarm", b =>
                {
                    b.Property<decimal>("AlarmId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ALARM_ID");

                    b.Property<string>("AlaramContent")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(300)")
                        .HasColumnName("ALARAM_CONTENT");

                    b.Property<string>("AlarmClassification")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ALARM_CLASSIFICATION")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("TransmissionDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("TRANSMISSION_DATE");

                    b.HasKey("AlarmId")
                        .HasName("SYS_C005201");

                    b.ToTable("PUSH_ALARM");
                });

            modelBuilder.Entity("ezcaretech.Models.Treatment", b =>
                {
                    b.Property<decimal>("TreatId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TREAT_ID");

                    b.Property<decimal>("DiseaseId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DISEASE_ID");

                    b.Property<decimal>("PatientId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PATIENT_ID");

                    b.Property<string>("Prescription")
                        .HasColumnType("CLOB")
                        .HasColumnName("PRESCRIPTION");

                    b.Property<decimal>("StaffId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STAFF_ID");

                    b.Property<DateTime>("TreatDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("TREAT_DATE");

                    b.Property<string>("TreatDetails")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("TREAT_DETAILS");

                    b.Property<string>("TreatStatusVal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TREAT_STATUS__VAL")
                        .IsFixedLength(true);

                    b.HasKey("TreatId")
                        .HasName("SYS_C005208");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("PatientId");

                    b.HasIndex("StaffId");

                    b.ToTable("TREATMENT");
                });

            modelBuilder.Entity("ezcaretech.Models.Waiting", b =>
                {
                    b.Property<decimal>("WatingId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("WATING_ID");

                    b.Property<decimal>("PatientId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PATIENT_ID");

                    b.Property<DateTime>("RequestToWait")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("REQUEST_TO_WAIT");

                    b.Property<string>("Requirements")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("REQUIREMENTS");

                    b.Property<string>("ReserveStatusVal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("RESERVE_STATUS_VAL")
                        .IsFixedLength(true);

                    b.HasKey("WatingId")
                        .HasName("SYS_C005212");

                    b.HasIndex("PatientId");

                    b.ToTable("WAITING");
                });

            modelBuilder.Entity("ezcaretech.Models.MediStaffLogin", b =>
                {
                    b.HasOne("ezcaretech.Models.MediStaff", "Staff")
                        .WithMany("MediStaffLogins")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("SYS_C005214")
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ezcaretech.Models.NameOfDisease", b =>
                {
                    b.HasOne("ezcaretech.Models.MediProcedure", "MediProcedure")
                        .WithMany("NameOfDiseases")
                        .HasForeignKey("MediProcedureId")
                        .HasConstraintName("SYS_C005213")
                        .IsRequired();

                    b.Navigation("MediProcedure");
                });

            modelBuilder.Entity("ezcaretech.Models.Payment", b =>
                {
                    b.HasOne("ezcaretech.Models.NameOfDisease", "Disease")
                        .WithMany("Payments")
                        .HasForeignKey("DiseaseId")
                        .HasConstraintName("SYS_C005216")
                        .IsRequired();

                    b.HasOne("ezcaretech.Models.Patient", "Patient")
                        .WithMany("Payments")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("SYS_C005218")
                        .IsRequired();

                    b.HasOne("ezcaretech.Models.Treatment", "Treat")
                        .WithMany("Payments")
                        .HasForeignKey("TreatId")
                        .HasConstraintName("SYS_C005221")
                        .IsRequired();

                    b.Navigation("Disease");

                    b.Navigation("Patient");

                    b.Navigation("Treat");
                });

            modelBuilder.Entity("ezcaretech.Models.Treatment", b =>
                {
                    b.HasOne("ezcaretech.Models.NameOfDisease", "Disease")
                        .WithMany("Treatments")
                        .HasForeignKey("DiseaseId")
                        .HasConstraintName("SYS_C005217")
                        .IsRequired();

                    b.HasOne("ezcaretech.Models.Patient", "Patient")
                        .WithMany("Treatments")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("SYS_C005219")
                        .IsRequired();

                    b.HasOne("ezcaretech.Models.MediStaff", "Staff")
                        .WithMany("Treatments")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("SYS_C005215")
                        .IsRequired();

                    b.Navigation("Disease");

                    b.Navigation("Patient");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ezcaretech.Models.Waiting", b =>
                {
                    b.HasOne("ezcaretech.Models.Patient", "Patient")
                        .WithMany("Waitings")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("SYS_C005220")
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ezcaretech.Models.MediProcedure", b =>
                {
                    b.Navigation("NameOfDiseases");
                });

            modelBuilder.Entity("ezcaretech.Models.MediStaff", b =>
                {
                    b.Navigation("MediStaffLogins");

                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("ezcaretech.Models.NameOfDisease", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("ezcaretech.Models.Patient", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Treatments");

                    b.Navigation("Waitings");
                });

            modelBuilder.Entity("ezcaretech.Models.Treatment", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
